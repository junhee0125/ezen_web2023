package java1.day08;

public class Ex1_객체 {

}
/*
 
 	객제지향 프로그래밍 : OOP
 		- 부품을 먼저 만들고 그 부품들을 하나씩 조립해서 완성품을 만드는 작업
 		- 객체를 먼저 각각 만들고 서로다른 그 객체들을 하나씩 조립/합쳐서 하나의 프로그램을 만드는 작업
 		블럭1개 = 객체 1개 ..  블럭 여러개 = >레고완성품
 		
 	객체란 : 물리적으로 존재하거나 계념적으로 존지하는 것 중에 식별가능한것
 	 			- 물리적인 존재 :  자동차, 자전거, 책, 사람 = 손에 잡히는 형태들
 	 			-  개념적인 존재 : 학과, 강의 주문
 			- 속성/필드 와 동작/메소드/행동으로 구분
 				속성 / 필드 /상태 :이름 나이 색깔 속도
 				동작/메소드.행동 : 웃다. 먹다, 달린다, 멈춘다.
 			- 객체모델링 : 현실세계의 객체를 컴퓨터로 옮기는 과정 [메소드랑 필드 만드는 과정]
 			
 	객체의 상호작용  -  객체들은 서로간에 상호작용한다. !!! 메소드/함수를 통해 서로 데이터를 주고 받으면서
 	
 		(사람객체 서로 다르다)		(붕어빵 객체 서로 다르다)
 			
 		사람 객체					붕어빵 객체1
 			이름 : 강호동				밀가루함량 0.51g
 			행동 : 먹다					구매자 : 강호동
 		사람객체2					븡아삥 객채
 			이름 : 유재석				밀가루함량 : 0.52g
 			행동 : 먹다.					구매자 : 유재석
 	객체 간의 관계
 		- 집합관계 : 완성품과 부품의 관계
 		- 사용관계 : 다른 객체의 필드를 읽고 변경하거나 메소드 호출하는 관계
 		- 상속관계 : 부모의 자식 관계를 말한다.
	
	객체 지향프로그래밍의 특징
		1. 캡슐화 : 필드, 동작, 하나로 묶어서 다른 객체로 감추는 것
		2. 상속 : 상위 객체로 부터 필드. 동작 물려받아 하위 객체가 사용할 수 있는것.
		3. 다형성 : 사용방법이 같지만 결과는 다양하게 나오는 성질
		
		선풍기 
		날개 갯수 / 날개크기 / 유무선 / 높이/ 버튼 / 타이머
		팬이 돌아간다. (속도에 따라  더 빠르게 돌아간다.) / 
		시간이 카운트한다.
		작동이 꺼진다.
		
		
		 
		 
				
 
 */